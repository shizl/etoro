<?php

/**
 * @file
 * Allow users to login using an external email account.
 *
 * Users can login to the site using an IMAP/POP/NNTP server. If the email
 * address is associated with a Drupal user, that user is logged in. If not,
 * a new user is created.
 */

/**
 * Implements hook_menu().
 */
function pingan_login_menu() {
  $items['admin/config/people/pingan_login'] = array(
    'title' => 'Pingan Login',
    'description' => 'Pingan Login settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pingan_login_settings_form'),
    'access arguments' => array('administer users'),
    'file' => 'pingan_login.admin.inc',
  );

  $items['pingan_login/%/login'] = array(
    'title' => 'Pingan Login',
    'description' => 'Pingan Login page',
    'page callback' => 'pingan_login_login',
    'page arguments' => array(1),
    'access callback' => true,
    //'menu_name'=>'main-menu',
  );
  $items['pingan_login/callback'] = array(
    'title' => 'Pingan Login',
    'description' => 'Pingan Login page',
    'page callback' => 'pingan_login_callback',
    'access callback' => true,
    //'menu_name'=>'main-menu',
  );
   $items['pingan_login/%/register'] = array(
    'title' => 'Pingan Login',
    'description' => 'Pingan Register page',
    'page arguments' => array(1),
    'page callback' => 'pingan_login_register',
    'access callback' => true,
    //'menu_name'=>'main-menu',
  );

  return $items;
}

/**
* Implements hook_block_info().
*/
function pingan_login_block_info() {
  $blocks['pingan_login_box'] = array(
    'info' => t('Pingan Login block'),
    'status' => TRUE,
    'region' => 'sidebar_first',
    
  );

  return $blocks;
}
 /**
* Implements hook_block_view().
*/
function pingan_login_block_view($delta = '') {
  global $user;
  $block = array();
  switch ($delta) {
    case 'pingan_login_box':
    drupal_add_css(drupal_get_path('module', "pingan_login") . "/css/pingan_login.css");
    drupal_add_js(drupal_get_path('module', "pingan_login") . "/js/pingan_login.js");
      $block['title'] = t('Do You Want to Learn More?');
      
      if($user->uid>0){
        $block['content'] = t('<p class="description">Register to access more materials</p>').t('Username').':'.$user->name.'  &nbsp; '.t('Email').':'.$user->mail;
      }else{
        $block['content'] = '<p class="description">Register to access more materials</p><div id="radius1"></div><button class="popLogin">'.t('Login').'</button> &nbsp; <button class="popRegister">'.t('Register').'</button><div id="radius"> </div><p class="gmpa"><a class="practice-account">Go to my pratice account</a></p><p class="opa"><a>Open practice account</a></p><div class="loginPop"><div class="popClose">Close</div><div class="popBody"><div class="titleLogin">'.t('Login').'</div><div class="titleRegister">'.t('Register').'</div><iframe width="660" style="border: 0;" height="650" src="" class="popSrc"></iframe></div></div>';
      }
      
      break;
  }
  return $block;
}

/**
  * login page
  */
function pingan_login_login($type=""){

$time=date("Y-m-d h:i:s");
header("Location: ".($type=="mobile" ? variable_get('pingan_login_mobile_url'):variable_get('pingan_login_pc_url'))."?appId=".variable_get('pingan_appid')."&timestamp=".$time."&signature=".md5("etoroappId=".variable_get('pingan_appid')."&timestamp=".$time."etoro").($type=="mobile" ? "&paramType=app":"")."&signtype=MD5");
}
/**
  * register page
  */
function pingan_login_register($type=""){
$time=date("Y-m-d h:i:s");

header("Location: ".($type=="mobile" ? variable_get('pingan_register_mobile_url'):variable_get('pingan_register_pc_url'))."?appId=".variable_get('pingan_appid')."&withMobile=1&timestamp=".$time."&signature=".md5("etoroappId=".variable_get('pingan_appid')."&timestamp=".$time."&withMobile=1etoro").($type=="mobile" ? "&paramType=app":"")."&signtype=MD5");

}
/**
  * ping an  callback function 
  */
function pingan_login_callback(){
 // print_r($_REQUEST);
  
  $requestxml=decrypt($_REQUEST['3desAssert'],variable_get('pingan_key'));
  //print_r($requestxml);exit;
  $xmlObject = simplexml_load_string($requestxml);
//print_r($xmlObject);exit;
  if($xmlObject->result=="00"){

    $userdata=array('name'=>(string)$xmlObject->attributes->attribute[0]['value'],
    'phone'=>(string)$xmlObject->attributes->attribute[1]['value'],
    'mail'=>(string)$xmlObject->attributes->attribute[2]['value'],
    'sex'=>(string)$xmlObject->attributes->attribute[3]['value'],
    'idNo'=>(string)$xmlObject->attributes->attribute[4]['value'],
    'idType'=>(string)$xmlObject->attributes->attribute[5]['value'],
    'birthDate'=>(string)$xmlObject->attributes->attribute[6]['value'],
    'cnName'=>(string)$xmlObject->attributes->attribute[7]['value'],
    'customerLevel'=>(string)$xmlObject->attributes->attribute[8]['value'],
    'toaId'=>$xmlObject->subject,
    'openid'=>md5((string)$xmlObject->attributes->attribute[0]['value'].(string)$xmlObject->attributes->attribute[2]['value']));

      $userid=db_query("SELECT `entity_id` FROM `field_data_field_pingan_openid` WHERE `field_pingan_openid_value`='".$userdata['openid']."'")->fetchField();
          if(empty($userid) || $userid==""){
              $name=$userdata['name'];
              $account = array(
                  'name' =>$name,
                  'pass' => '',
                  'mail' => $userdata['mail'],
                  'status' => 1,
                  'init' => $name,
                  'roles' => 2
              );
              user_save(null, $account);

              $accountArray = user_load_multiple(array(), array('name' => $name));
              //$account=user_load($newaccount->uid);   
            $edit = array(
              'field_pingan_openid' => array(
                'und' => array(
                  0 => array(
                    'value' => $userdata['openid']
                  )
                )
              ),'field_first_name' => array(
                'und' => array(
                  0 => array(
                    'value' => substr($userdata['cnName'],1,5)
                  )
                )
              ),'field_last_name' => array(
                'und' => array(
                  0 => array(
                    'value' => substr($userdata['cnName'],0,1)
                  )
                )
              ),'field_gender' => array(
                'und' => array(
                  0 => array(
                    'value' => $userdata['sex']
                  )
                )
              ),'field_type_of_id' => array(
                'und' => array(
                  0 => array(
                    'value' => $userdata['customerLevel']
                  )
                )
              ),'field_date_of_birth' => array(
                'und' => array(
                  0 => array(
                    'value' => $userdata['birthDate']
                  )
                )
              ),'field_toaid' => array(
                'und' => array(
                  0 => array(
                    'value' => $userdata['toaId']
                  )
                )
              ),'field_toafullname' => array(
                'und' => array(
                  0 => array(
                    'value' => $userdata['cnName']
                  )
                )
              ),'field_toaphone' => array(
                'und' => array(
                  0 => array(
                    'value' => $userdata['phone']
                  )
                )
              ),'field_istoaphoneverified' => array(
                'und' => array(
                  0 => array(
                    'value' => 1
                  )
                )
              ),'field_chineseidnumber' => array(
                'und' => array(
                  0 => array(
                    'value' => $userdata['idNo']
                  )
                )
              )
              ,'field_chineseidtype' => array(
                'und' => array(
                  0 => array(
                    'value' => $userdata['idType']
                  )
                )
              )

            );

            foreach ($accountArray as $item) {
              user_save($item, $edit);
              $account=$item;
            }
            $isReg=1;
           
         }else{
           $isReg=0;
          $account=user_load($userid);

         }
        if ($account) {
          global $user;

          // Call logout hooks.
          module_invoke_all('user_logout', $user);

          // Switching user.
          $user = $account;
          drupal_session_regenerate();

          // Call all login hooks.
          $edit = array();
          user_module_invoke('login', $edit, $user);
        }
        if($isReg){
          echo t('登陆成功，请关闭窗口。<br>正在提交用户信息到etoro。').'<script type="text/javascript">setTimeout("window.parent.location.reload()",3000);</script>';
        }else{
          echo t('登陆成功，请关闭窗口。系统将在3s内关闭窗口<br>').'<script type="text/javascript">setTimeout("window.parent.location.reload()",3000);</script>';
        }
        
        //drupal_goto("/user");

    }else{
      echo '错误代码:'.$xmlObject->result.'<br> 描述:'.$xmlObject->message.'<br>请联系管理员';
      exit;
    }
    
}

/*pingan 3des decode*/
function decrypt($encrypted,$key) { //  
    $encrypted = base64_decode ($encrypted ); 
    $key = str_pad ( $key, 24, '0' ); 
    $td = mcrypt_module_open ( MCRYPT_3DES, '', 'ecb', '' ); 
    $iv = @mcrypt_create_iv ( mcrypt_enc_get_iv_size ( $td ), MCRYPT_RAND ); 
    $ks = mcrypt_enc_get_key_size ( $td ); 
    @mcrypt_generic_init ( $td, $key, $iv ); 
    $decrypted = mdecrypt_generic ( $td, $encrypted ); 
    mcrypt_generic_deinit ( $td ); 
    mcrypt_module_close ( $td ); 
    $y = pkcs5_unpad ( $decrypted ); 
    $code=urldecode(base64_decode($y));
    return $code; 
} 

function pkcs5_unpad($text) { 
    $pad = ord ( $text {strlen ( $text ) - 1} ); 
    if ($pad > strlen ( $text )) { 
        return false; 
    } 
    if (strspn ( $text, chr ( $pad ), strlen ( $text ) - $pad ) != $pad) { 
        return false; 
    } 
    return substr ( $text, 0, - 1 * $pad ); 
} 

function xml_to_array( $xml )
{
    $reg = "/<(\\w+)[^>]*?>([\\x00-\\xFF]*?)<\\/\\1>/";
    if(preg_match_all($reg, $xml, $matches))
    {
        $count = count($matches[0]);
        $arr = array();
        for($i = 0; $i < $count; $i++)
        {
            $key= $matches[1][$i];
            $val = xml_to_array( $matches[2][$i] );  // 递归
            if(array_key_exists($key, $arr))
            {
                if(is_array($arr[$key]))
                {
                    if(!array_key_exists(0,$arr[$key]))
                    {
                        $arr[$key] = array($arr[$key]);
                    }
                }else{
                    $arr[$key] = array($arr[$key]);
                }
                $arr[$key][] = $val;
            }else{
                $arr[$key] = $val;
            }
        }
        return $arr;
    }else{
        return $xml;
    }
}

?>
